---
title: "Filtering the Data"
format:
  html:
    code-fold: show
jupyter: python3
---

In this lesson, we’ll learn how to filter data in a Pandas DataFrame. Filtering lets you focus on what’s important — whether that’s specific seasons, certain statistics, or rows that meet particular conditions.

## When to Filter Data

Datasets often contain more information than we need. Filtering allows us to narrow things down, making it easier to see patterns and answer specific questions.  

For example, we might want to only look at seasons before a certain year, or just the rows where a player’s free throw percentage was above 75%.

### Step 1 — Import Libraries and Load Data

We’ll use Pandas to load Pascal Siakam’s basketball data from a CSV file into a DataFrame.

```{python}
# Setup
import pandas as pd

# Input: Load Pascal Siakam's data into a DataFrame
url = "https://raw.githubusercontent.com/pbeens/Data-Dunkers/main/Data/Pascal_Siakam.csv"
df = pd.read_csv(url)

# Preview the first few rows
df.head()
```

### Step 2 — Filter Rows

We can filter the DataFrame to only include seasons up to 2022–23.

```{python}
# Filter to include only seasons up to 2022-23
df = df[df["SEASON_ID"] <= "2022-23"]

# Display the filtered DataFrame
df
```

We can also filter using conditions on specific statistics. For example, rows where Siakam’s free throw percentage (`FT_PCT`) was above 75%.

```{python}
# Filter to include rows where FT% > 75
df[df["FT_PCT"] > 0.75]
```

### Step 3 — Combine Multiple Conditions

We can combine filters using `&` (and) or `|` (or).

```{python}
# Filter rows where FT% > 75 and GS == GP (started every game)
df[(df["FT_PCT"] > 0.75) & (df["GS"] == df["GP"])]
```

Comparison operators in Python include:

* `>` greater than
* `<` less than
* `==` equal to
* `!=` not equal to
* `>=` greater than or equal to
* `<=` less than or equal to
* `&` and
* `|` or

## Talk About It

* Why is filtering useful when working with a large dataset?
* What kinds of questions can you answer by filtering rows?
* How might combining multiple conditions (`&`, `|`) help you refine your analysis further?

## Lesson Notebook

Now it’s your turn to practice: The notebook version of this lesson includes more filtering examples and practice activities.

Open the lesson [here](https://github.com/Data-Dunkers/lessons/blob/main/data-filtering.ipynb).
